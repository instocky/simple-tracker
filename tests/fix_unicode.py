#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Unicode —Å–∏–º–≤–æ–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
–ó–∞–º–µ–Ω–∞ –Ω–∞ ASCII-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∞–Ω–∞–ª–æ–≥–∏
"""
import os
import re

def fix_unicode_in_files():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç Unicode —Å–∏–º–≤–æ–ª—ã –≤–æ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞"""
    
    # –¢–∞–±–ª–∏—Ü–∞ –∑–∞–º–µ–Ω
    unicode_replacements = {
        '‚úì': '[OK]',
        '‚úó': '[FAIL]', 
        'üöÄ': '',
        '‚îÇ': '|',
        '‚îú‚îÄ‚îÄ': '+-',
        '‚îú‚îÄ‚îÄ ': '+- ',
        '‚Üí': '->',
        '‚Üê': '<-',
        '‚Üë': '^',
        '‚Üì': 'v'
    }
    
    # –§–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    files_to_fix = [
        'core/transliteration.py',
        'project_manager.py', 
        'tests/test_project_manager_simple.py',
        'tests/test_project_manager_new.py',
        'tests/test_project_manager.py'
    ]
    
    script_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    
    for file_path in files_to_fix:
        full_path = os.path.join(script_dir, file_path)
        
        if os.path.exists(full_path):
            print(f"–ò—Å–ø—Ä–∞–≤–ª—è–µ–º: {file_path}")
            
            # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
            with open(full_path, 'r', encoding='utf-8') as f:
                content = f.read()
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã
            modified = False
            for unicode_char, ascii_replacement in unicode_replacements.items():
                if unicode_char in content:
                    content = content.replace(unicode_char, ascii_replacement)
                    modified = True
                    print(f"  {unicode_char} -> {ascii_replacement}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if modified:
                with open(full_path, 'w', encoding='utf-8') as f:
                    f.write(content)
                print(f"  –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω")
            else:
                print(f"  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        else:
            print(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")


def test_console_output():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    print("\n=== –¢–µ—Å—Ç –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ ===")
    
    test_strings = [
        "–¢–µ—Å—Ç ASCII: [OK] [FAIL]",
        "–î–µ—Ä–µ–≤–æ: +- –í–µ—Ç–∫–∞", 
        "–°—Ç—Ä–µ–ª–∫–∞: ->",
        "–†–µ–∑—É–ª—å—Ç–∞—Ç: [OK]"
    ]
    
    for test_str in test_strings:
        try:
            print(f"  {test_str}")
        except UnicodeEncodeError as e:
            print(f"  –û–®–ò–ë–ö–ê: {e}")


if __name__ == "__main__":
    print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Unicode —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏")
    print("=" * 60)
    
    fix_unicode_in_files()
    test_console_output()
    
    print("=" * 60)
    print("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
